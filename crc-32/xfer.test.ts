import { assertEquals } from '@std/assert';

import CRC_32_XFER from './xfer.ts';

const table = `
00000000 000000af 0000015e 000001f1 000002bc 00000213 000003e2 0000034d
00000578 000005d7 00000426 00000489 000007c4 0000076b 0000069a 00000635
00000af0 00000a5f 00000bae 00000b01 0000084c 000008e3 00000912 000009bd
00000f88 00000f27 00000ed6 00000e79 00000d34 00000d9b 00000c6a 00000cc5
000015e0 0000154f 000014be 00001411 0000175c 000017f3 00001602 000016ad
00001098 00001037 000011c6 00001169 00001224 0000128b 0000137a 000013d5
00001f10 00001fbf 00001e4e 00001ee1 00001dac 00001d03 00001cf2 00001c5d
00001a68 00001ac7 00001b36 00001b99 000018d4 0000187b 0000198a 00001925
00002bc0 00002b6f 00002a9e 00002a31 0000297c 000029d3 00002822 0000288d
00002eb8 00002e17 00002fe6 00002f49 00002c04 00002cab 00002d5a 00002df5
00002130 0000219f 0000206e 000020c1 0000238c 00002323 000022d2 0000227d
00002448 000024e7 00002516 000025b9 000026f4 0000265b 000027aa 00002705
00003e20 00003e8f 00003f7e 00003fd1 00003c9c 00003c33 00003dc2 00003d6d
00003b58 00003bf7 00003a06 00003aa9 000039e4 0000394b 000038ba 00003815
000034d0 0000347f 0000358e 00003521 0000366c 000036c3 00003732 0000379d
000031a8 00003107 000030f6 00003059 00003314 000033bb 0000324a 000032e5
00005780 0000572f 000056de 00005671 0000553c 00005593 00005462 000054cd
000052f8 00005257 000053a6 00005309 00005044 000050eb 0000511a 000051b5
00005d70 00005ddf 00005c2e 00005c81 00005fcc 00005f63 00005e92 00005e3d
00005808 000058a7 00005956 000059f9 00005ab4 00005a1b 00005bea 00005b45
00004260 000042cf 0000433e 00004391 000040dc 00004073 00004182 0000412d
00004718 000047b7 00004646 000046e9 000045a4 0000450b 000044fa 00004455
00004890 0000483f 000049ce 00004961 00004a2c 00004a83 00004b72 00004bdd
00004de8 00004d47 00004cb6 00004c19 00004f54 00004ffb 00004e0a 00004ea5
00007c40 00007cef 00007d1e 00007db1 00007efc 00007e53 00007fa2 00007f0d
00007938 00007997 00007866 000078c9 00007b84 00007b2b 00007ada 00007a75
000076b0 0000761f 000077ee 00007741 0000740c 000074a3 00007552 000075fd
000073c8 00007367 00007296 00007239 00007174 000071db 0000702a 00007085
000069a0 0000690f 000068fe 00006851 00006b1c 00006bb3 00006a42 00006aed
00006cd8 00006c77 00006d86 00006d29 00006e64 00006ecb 00006f3a 00006f95
00006350 000063ff 0000620e 000062a1 000061ec 00006143 000060b2 0000601d
00006628 00006687 00006776 000067d9 00006494 0000643b 000065ca 00006565
`.trim().split(/\s+/).map((s) => parseInt(s, 16));

Deno.test('table', () => {
	assertEquals(CRC_32_XFER.table(), table);
});

Deno.test('123456789', () => {
	let c = CRC_32_XFER.init();
	c = CRC_32_XFER.update(c, new TextEncoder().encode('123456789'));
	c = CRC_32_XFER.finalize(c);
	assertEquals(c, 0xbd0be338);
});
