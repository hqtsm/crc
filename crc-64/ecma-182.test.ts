import { assertEquals } from '@std/assert';

import CRC_64_ECMA_182 from './ecma-182.ts';

const table = `
0000000000000000 42f0e1eba9ea3693 85e1c3d753d46d26 c711223cfa3e5bb5
493366450e42ecdf 0bc387aea7a8da4c ccd2a5925d9681f9 8e224479f47cb76a
9266cc8a1c85d9be d0962d61b56fef2d 17870f5d4f51b498 5577eeb6e6bb820b
db55aacf12c73561 99a54b24bb2d03f2 5eb4691841135847 1c4488f3e8f96ed4
663d78ff90e185ef 24cd9914390bb37c e3dcbb28c335e8c9 a12c5ac36adfde5a
2f0e1eba9ea36930 6dfeff5137495fa3 aaefdd6dcd770416 e81f3c86649d3285
f45bb4758c645c51 b6ab559e258e6ac2 71ba77a2dfb03177 334a9649765a07e4
bd68d2308226b08e ff9833db2bcc861d 388911e7d1f2dda8 7a79f00c7818eb3b
cc7af1ff21c30bde 8e8a101488293d4d 499b3228721766f8 0b6bd3c3dbfd506b
854997ba2f81e701 c7b97651866bd192 00a8546d7c558a27 4258b586d5bfbcb4
5e1c3d753d46d260 1cecdc9e94ace4f3 dbfdfea26e92bf46 990d1f49c77889d5
172f5b3033043ebf 55dfbadb9aee082c 92ce98e760d05399 d03e790cc93a650a
aa478900b1228e31 e8b768eb18c8b8a2 2fa64ad7e2f6e317 6d56ab3c4b1cd584
e374ef45bf6062ee a1840eae168a547d 66952c92ecb40fc8 2465cd79455e395b
3821458aada7578f 7ad1a461044d611c bdc0865dfe733aa9 ff3067b657990c3a
711223cfa3e5bb50 33e2c2240a0f8dc3 f4f3e018f031d676 b60301f359dbe0e5
da050215ea6c212f 98f5e3fe438617bc 5fe4c1c2b9b84c09 1d14202910527a9a
93366450e42ecdf0 d1c685bb4dc4fb63 16d7a787b7faa0d6 5427466c1e109645
4863ce9ff6e9f891 0a932f745f03ce02 cd820d48a53d95b7 8f72eca30cd7a324
0150a8daf8ab144e 43a04931514122dd 84b16b0dab7f7968 c6418ae602954ffb
bc387aea7a8da4c0 fec89b01d3679253 39d9b93d2959c9e6 7b2958d680b3ff75
f50b1caf74cf481f b7fbfd44dd257e8c 70eadf78271b2539 321a3e938ef113aa
2e5eb66066087d7e 6cae578bcfe24bed abbf75b735dc1058 e94f945c9c3626cb
676dd025684a91a1 259d31cec1a0a732 e28c13f23b9efc87 a07cf2199274ca14
167ff3eacbaf2af1 548f120162451c62 939e303d987b47d7 d16ed1d631917144
5f4c95afc5edc62e 1dbc74446c07f0bd daad56789639ab08 985db7933fd39d9b
84193f60d72af34f c6e9de8b7ec0c5dc 01f8fcb784fe9e69 43081d5c2d14a8fa
cd2a5925d9681f90 8fdab8ce70822903 48cb9af28abc72b6 0a3b7b1923564425
70428b155b4eaf1e 32b26afef2a4998d f5a348c2089ac238 b753a929a170f4ab
3971ed50550c43c1 7b810cbbfce67552 bc902e8706d82ee7 fe60cf6caf321874
e224479f47cb76a0 a0d4a674ee214033 67c58448141f1b86 253565a3bdf52d15
ab1721da49899a7f e9e7c031e063acec 2ef6e20d1a5df759 6c0603e6b3b7c1ca
f6fae5c07d3274cd b40a042bd4d8425e 731b26172ee619eb 31ebc7fc870c2f78
bfc9838573709812 fd39626eda9aae81 3a28405220a4f534 78d8a1b9894ec3a7
649c294a61b7ad73 266cc8a1c85d9be0 e17dea9d3263c055 a38d0b769b89f6c6
2daf4f0f6ff541ac 6f5faee4c61f773f a84e8cd83c212c8a eabe6d3395cb1a19
90c79d3fedd3f122 d2377cd44439c7b1 15265ee8be079c04 57d6bf0317edaa97
d9f4fb7ae3911dfd 9b041a914a7b2b6e 5c1538adb04570db 1ee5d94619af4648
02a151b5f156289c 4051b05e58bc1e0f 87409262a28245ba c5b073890b687329
4b9237f0ff14c443 0962d61b56fef2d0 ce73f427acc0a965 8c8315cc052a9ff6
3a80143f5cf17f13 7870f5d4f51b4980 bf61d7e80f251235 fd913603a6cf24a6
73b3727a52b393cc 31439391fb59a55f f652b1ad0167feea b4a25046a88dc879
a8e6d8b54074a6ad ea16395ee99e903e 2d071b6213a0cb8b 6ff7fa89ba4afd18
e1d5bef04e364a72 a3255f1be7dc7ce1 64347d271de22754 26c49cccb40811c7
5cbd6cc0cc10fafc 1e4d8d2b65facc6f d95caf179fc497da 9bac4efc362ea149
158e0a85c2521623 577eeb6e6bb820b0 906fc95291867b05 d29f28b9386c4d96
cedba04ad0952342 8c2b41a1797f15d1 4b3a639d83414e64 09ca82762aab78f7
87e8c60fded7cf9d c51827e4773df90e 020905d88d03a2bb 40f9e43324e99428
2cffe7d5975e55e2 6e0f063e3eb46371 a91e2402c48a38c4 ebeec5e96d600e57
65cc8190991cb93d 273c607b30f68fae e02d4247cac8d41b a2dda3ac6322e288
be992b5f8bdb8c5c fc69cab42231bacf 3b78e888d80fe17a 7988096371e5d7e9
f7aa4d1a85996083 b55aacf12c735610 724b8ecdd64d0da5 30bb6f267fa73b36
4ac29f2a07bfd00d 08327ec1ae55e69e cf235cfd546bbd2b 8dd3bd16fd818bb8
03f1f96f09fd3cd2 41011884a0170a41 86103ab85a2951f4 c4e0db53f3c36767
d8a453a01b3a09b3 9a54b24bb2d03f20 5d45907748ee6495 1fb5719ce1045206
919735e51578e56c d367d40ebc92d3ff 1476f63246ac884a 568617d9ef46bed9
e085162ab69d5e3c a275f7c11f7768af 6564d5fde549331a 279434164ca30589
a9b6706fb8dfb2e3 eb46918411358470 2c57b3b8eb0bdfc5 6ea7525342e1e956
72e3daa0aa188782 30133b4b03f2b111 f7021977f9cceaa4 b5f2f89c5026dc37
3bd0bce5a45a6b5d 79205d0e0db05dce be317f32f78e067b fcc19ed95e6430e8
86b86ed5267cdbd3 c4488f3e8f96ed40 0359ad0275a8b6f5 41a94ce9dc428066
cf8b0890283e370c 8d7be97b81d4019f 4a6acb477bea5a2a 089a2aacd2006cb9
14dea25f3af9026d 562e43b4931334fe 913f6188692d6f4b d3cf8063c0c759d8
5dedc41a34bbeeb2 1f1d25f19d51d821 d80c07cd676f8394 9afce626ce85b507
`.trim().split(/\s+/).map((x) => BigInt(`0x${x}`));

Deno.test('table', () => {
	assertEquals(CRC_64_ECMA_182.table(), table);
});

Deno.test('123456789', () => {
	let c = CRC_64_ECMA_182.init();
	c = CRC_64_ECMA_182.update(c, new TextEncoder().encode('123456789'));
	c = CRC_64_ECMA_182.finalize(c);
	assertEquals(c, 0x6c40df5f0b497347n);
});
